{
  "id": "b4f5cc90-6051-4a08-a071-49293d1b7e3e",
  "prevId": "cc00339b-e652-4dcb-a816-fad4510eaeed",
  "version": "5",
  "dialect": "pg",
  "tables": {
    "catchables": {
      "name": "catchables",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "rarity": {
          "name": "rarity",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "worth": {
          "name": "worth",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "image": {
          "name": "image",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "first_caught_by": {
          "name": "first_caught_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "catchables_first_caught_by_users_id_fk": {
          "name": "catchables_first_caught_by_users_id_fk",
          "tableFrom": "catchables",
          "tableTo": "users",
          "columnsFrom": [
            "first_caught_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "catches": {
      "name": "catches",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "catchable_id": {
          "name": "catchable_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "caught_by": {
          "name": "caught_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "catches_catchable_id_catchables_id_fk": {
          "name": "catches_catchable_id_catchables_id_fk",
          "tableFrom": "catches",
          "tableTo": "catchables",
          "columnsFrom": [
            "catchable_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "catches_caught_by_users_id_fk": {
          "name": "catches_caught_by_users_id_fk",
          "tableFrom": "catches",
          "tableTo": "users",
          "columnsFrom": [
            "caught_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "inventory": {
      "name": "inventory",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "item_id": {
          "name": "item_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "count": {
          "name": "count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "inventory_user_id_users_id_fk": {
          "name": "inventory_user_id_users_id_fk",
          "tableFrom": "inventory",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "inventory_item_id_items_id_fk": {
          "name": "inventory_item_id_items_id_fk",
          "tableFrom": "inventory",
          "tableTo": "items",
          "columnsFrom": [
            "item_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "items": {
      "name": "items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "purchases": {
      "name": "purchases",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "item_id": {
          "name": "item_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "shop_id": {
          "name": "shop_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "purchases_user_id_users_id_fk": {
          "name": "purchases_user_id_users_id_fk",
          "tableFrom": "purchases",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "purchases_item_id_items_id_fk": {
          "name": "purchases_item_id_items_id_fk",
          "tableFrom": "purchases",
          "tableTo": "items",
          "columnsFrom": [
            "item_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "purchases_shop_id_shop_id_fk": {
          "name": "purchases_shop_id_shop_id_fk",
          "tableFrom": "purchases",
          "tableTo": "shop",
          "columnsFrom": [
            "shop_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "shop": {
      "name": "shop",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "item_id": {
          "name": "item_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "cost": {
          "name": "cost",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "shop_item_id_items_id_fk": {
          "name": "shop_item_id_items_id_fk",
          "tableFrom": "shop",
          "tableTo": "items",
          "columnsFrom": [
            "item_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "discord_snowflake": {
          "name": "discord_snowflake",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "discord_tag": {
          "name": "discord_tag",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "money": {
          "name": "money",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "auto_fishing": {
          "name": "auto_fishing",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_discord_snowflake_unique": {
          "name": "users_discord_snowflake_unique",
          "nullsNotDistinct": false,
          "columns": [
            "discord_snowflake"
          ]
        }
      }
    }
  },
  "enums": {},
  "schemas": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}